trigger: none

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  azureServiceConnection: 'Pay-As-You-Go(1)(f510d486-a17f-44f2-a1c4-63a7186e923c)'
  azureAppServiceName: 'mfwebapp4567'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'
    includePreviewVersions: true

- task: UseDotNet@2
  inputs:
    packageType: 'runtime'
    version: '6.x'
    includePreviewVersions: true
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    ArtifactName: 'package'
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    publishLocation: 'Container'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'

- task: CmdLine@2
  inputs:
    script: |
      ls $(Build.ArtifactStagingDirectory)
      pwd

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: '$(azureServiceConnection)'
    appType: 'webApp'
    WebAppName: '$(azureAppServiceName)'
    packageForLinux: '$(System.ArtifactsDirectory)/package.zip'
    enableCustomDeployment: true
    DeploymentType: 'zipDeploy'